{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const AITutor=()=>{const[courses,setCourses]=useState([]);const[selectedCourse,setSelectedCourse]=useState(null);const[practiceCards,setPracticeCards]=useState([]);const[currentCardIndex,setCurrentCardIndex]=useState(0);const[showAnswer,setShowAnswer]=useState(false);const[message,setMessage]=useState('');const API_BASE='http://localhost:8000';useEffect(()=>{fetchCourses();},[]);const fetchCourses=async()=>{try{const response=await axios.get(\"\".concat(API_BASE,\"/courses\"));setCourses(response.data);}catch(error){setMessage('Failed to load courses. Make sure the AI tutor backend is running.');}};const selectCourse=async iso=>{try{const response=await axios.get(\"\".concat(API_BASE,\"/practice/\").concat(iso));setSelectedCourse(iso);setPracticeCards(response.data);setCurrentCardIndex(0);setShowAnswer(false);setMessage('');}catch(error){setMessage('Failed to load practice cards.');}};const reviewCard=async quality=>{if(practiceCards.length===0)return;const cardId=practiceCards[currentCardIndex].id;try{await axios.post(\"\".concat(API_BASE,\"/review/\").concat(cardId),quality);nextCard();}catch(error){setMessage('Failed to review card.');}};const nextCard=()=>{if(currentCardIndex<practiceCards.length-1){setCurrentCardIndex(currentCardIndex+1);setShowAnswer(false);}else{setMessage('Practice session complete!');setPracticeCards([]);setSelectedCourse(null);}};const playTTS=(text,lang)=>{const audio=new Audio(\"\".concat(API_BASE,\"/practice/tts?text=\").concat(encodeURIComponent(text),\"&lang=\").concat(lang));audio.play();};return/*#__PURE__*/_jsx(\"section\",{id:\"ai-tutor\",className:\"py-20 bg-gradient-to-br from-purple-50 to-indigo-100\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container mx-auto px-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-3xl font-bold text-center text-gray-800 mb-16\",children:\"AI Language Tutor\"}),message&&/*#__PURE__*/_jsx(\"p\",{className:\"text-center text-red-500 mb-4\",children:message}),!selectedCourse?/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl mb-4\",children:\"Select a Language to Practice\"}),/*#__PURE__*/_jsx(\"div\",{className:\"grid grid-cols-2 md:grid-cols-4 gap-4\",children:courses.map(course=>/*#__PURE__*/_jsxs(\"button\",{onClick:()=>selectCourse(course.iso),className:\"bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg transition duration-300\",children:[course.language,\" (\",course.card_count,\" cards)\"]},course.iso))}),courses.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No courses available. Seed some languages first.\"})]}):practiceCards.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto bg-white rounded-xl shadow-lg p-8\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-center mb-6\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-gray-600\",children:[\"Card \",currentCardIndex+1,\" of \",practiceCards.length]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold mb-4\",children:practiceCards[currentCardIndex].front}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>playTTS(practiceCards[currentCardIndex].front,'en'),className:\"bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm\",children:\"\\uD83D\\uDD0A English\"})]}),!showAnswer?/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowAnswer(true),className:\"w-full bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg transition duration-300\",children:\"Show Answer\"}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"p\",{className:\"text-xl mb-4\",children:practiceCards[currentCardIndex].back}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>playTTS(practiceCards[currentCardIndex].back,selectedCourse),className:\"bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm mb-4\",children:\"\\uD83D\\uDD0A Target Language\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>reviewCard(0),className:\"bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded\",children:\"Again (0)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>reviewCard(1),className:\"bg-orange-500 hover:bg-orange-600 text-white py-2 px-4 rounded\",children:\"Hard (1)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>reviewCard(2),className:\"bg-yellow-500 hover:bg-yellow-600 text-white py-2 px-4 rounded\",children:\"Good (2)\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>reviewCard(3),className:\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\",children:\"Easy (3)\"})]})]})]})]})});};export default AITutor;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","AITutor","courses","setCourses","selectedCourse","setSelectedCourse","practiceCards","setPracticeCards","currentCardIndex","setCurrentCardIndex","showAnswer","setShowAnswer","message","setMessage","API_BASE","fetchCourses","response","get","concat","data","error","selectCourse","iso","reviewCard","quality","length","cardId","id","post","nextCard","playTTS","text","lang","audio","Audio","encodeURIComponent","play","className","children","map","course","onClick","language","card_count","front","back"],"sources":["/home/kj/portfolio/portfolio/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AITutor = () => {\r\n  const [courses, setCourses] = useState([]);\r\n  const [selectedCourse, setSelectedCourse] = useState(null);\r\n  const [practiceCards, setPracticeCards] = useState([]);\r\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\r\n  const [showAnswer, setShowAnswer] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n\r\n  const API_BASE = 'http://localhost:8000';\r\n\r\n  useEffect(() => {\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  const fetchCourses = async () => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/courses`);\r\n      setCourses(response.data);\r\n    } catch (error) {\r\n      setMessage('Failed to load courses. Make sure the AI tutor backend is running.');\r\n    }\r\n  };\r\n\r\n  const selectCourse = async (iso) => {\r\n    try {\r\n      const response = await axios.get(`${API_BASE}/practice/${iso}`);\r\n      setSelectedCourse(iso);\r\n      setPracticeCards(response.data);\r\n      setCurrentCardIndex(0);\r\n      setShowAnswer(false);\r\n      setMessage('');\r\n    } catch (error) {\r\n      setMessage('Failed to load practice cards.');\r\n    }\r\n  };\r\n\r\n  const reviewCard = async (quality) => {\r\n    if (practiceCards.length === 0) return;\r\n    const cardId = practiceCards[currentCardIndex].id;\r\n    try {\r\n      await axios.post(`${API_BASE}/review/${cardId}`, quality);\r\n      nextCard();\r\n    } catch (error) {\r\n      setMessage('Failed to review card.');\r\n    }\r\n  };\r\n\r\n  const nextCard = () => {\r\n    if (currentCardIndex < practiceCards.length - 1) {\r\n      setCurrentCardIndex(currentCardIndex + 1);\r\n      setShowAnswer(false);\r\n    } else {\r\n      setMessage('Practice session complete!');\r\n      setPracticeCards([]);\r\n      setSelectedCourse(null);\r\n    }\r\n  };\r\n\r\n  const playTTS = (text, lang) => {\r\n    const audio = new Audio(`${API_BASE}/practice/tts?text=${encodeURIComponent(text)}&lang=${lang}`);\r\n    audio.play();\r\n  };\r\n\r\n  return (\r\n    <section id=\"ai-tutor\" className=\"py-20 bg-gradient-to-br from-purple-50 to-indigo-100\">\r\n      <div className=\"container mx-auto px-6\">\r\n        <h2 className=\"text-3xl font-bold text-center text-gray-800 mb-16\">AI Language Tutor</h2>\r\n\r\n        {message && <p className=\"text-center text-red-500 mb-4\">{message}</p>}\r\n\r\n        {!selectedCourse ? (\r\n          <div className=\"text-center\">\r\n            <h3 className=\"text-xl mb-4\">Select a Language to Practice</h3>\r\n            <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n              {courses.map(course => (\r\n                <button\r\n                  key={course.iso}\r\n                  onClick={() => selectCourse(course.iso)}\r\n                  className=\"bg-purple-600 hover:bg-purple-700 text-white py-2 px-4 rounded-lg transition duration-300\"\r\n                >\r\n                  {course.language} ({course.card_count} cards)\r\n                </button>\r\n              ))}\r\n            </div>\r\n            {courses.length === 0 && <p>No courses available. Seed some languages first.</p>}\r\n          </div>\r\n        ) : (\r\n          practiceCards.length > 0 && (\r\n            <div className=\"max-w-2xl mx-auto bg-white rounded-xl shadow-lg p-8\">\r\n              <div className=\"text-center mb-6\">\r\n                <p className=\"text-gray-600\">Card {currentCardIndex + 1} of {practiceCards.length}</p>\r\n              </div>\r\n              <div className=\"mb-6\">\r\n                <h3 className=\"text-2xl font-bold mb-4\">{practiceCards[currentCardIndex].front}</h3>\r\n                <button\r\n                  onClick={() => playTTS(practiceCards[currentCardIndex].front, 'en')}\r\n                  className=\"bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm\"\r\n                >\r\n                  ðŸ”Š English\r\n                </button>\r\n              </div>\r\n              {!showAnswer ? (\r\n                <button\r\n                  onClick={() => setShowAnswer(true)}\r\n                  className=\"w-full bg-green-600 hover:bg-green-700 text-white py-3 px-6 rounded-lg transition duration-300\"\r\n                >\r\n                  Show Answer\r\n                </button>\r\n              ) : (\r\n                <div>\r\n                  <p className=\"text-xl mb-4\">{practiceCards[currentCardIndex].back}</p>\r\n                  <button\r\n                    onClick={() => playTTS(practiceCards[currentCardIndex].back, selectedCourse)}\r\n                    className=\"bg-blue-500 hover:bg-blue-600 text-white py-1 px-3 rounded text-sm mb-4\"\r\n                  >\r\n                    ðŸ”Š Target Language\r\n                  </button>\r\n                  <div className=\"flex justify-between\">\r\n                    <button onClick={() => reviewCard(0)} className=\"bg-red-500 hover:bg-red-600 text-white py-2 px-4 rounded\">Again (0)</button>\r\n                    <button onClick={() => reviewCard(1)} className=\"bg-orange-500 hover:bg-orange-600 text-white py-2 px-4 rounded\">Hard (1)</button>\r\n                    <button onClick={() => reviewCard(2)} className=\"bg-yellow-500 hover:bg-yellow-600 text-white py-2 px-4 rounded\">Good (2)</button>\r\n                    <button onClick={() => reviewCard(3)} className=\"bg-green-500 hover:bg-green-600 text-white py-2 px-4 rounded\">Easy (3)</button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          )\r\n        )}\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AITutor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}